# -*- coding: utf-8 -*-
"""Rio de Janeiro

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15htreZACb65vlyc3lc2tIAurbBkqR3nX

# Río de Janeiro

Link de csv: http://data.insideairbnb.com/brazil/rj/rio-de-janeiro/2022-06-20/visualisations/listings.csv
Link de google colab: https://colab.research.google.com/drive/15htreZACb65vlyc3lc2tIAurbBkqR3nX?usp=sharing

#Problema

La ciudad que tenemos es Río de Janeiro, teniendo en cuenta los datos que teniamos, usamos los barrios, los precios y los tipos de alquiler para responder las siguientes preguntas:
1.   El precio medio por tipo de alquiler en la ciudad de Rio de Janeiro.Para la primera pregunta usamos un **diccionario** que tiene como clave el tipo de alquiler y como valor el precio medio.
2.   La cantidad de tipos de alquiler por barrio. Para la segunda pregunta usamos un **diccionario** que tiene como clave el barrio y como valor otro **diccionario **que tiene de clave el tipo de alquiler y como valor la cantidad que hay en ese barrio.
3. La cantidad de anuncios que hay por barrio. Para la tercer pregunta usamos un **diccionario** que tiene como clave el barrio y como valor la cantidad de anuncios que hay

# Estructuras de datos

# 1era Pregunta

Queremos saber cuál es el precio promedio por tipo de alquiler, ponemos esa información en un diccionario dónde especificamos el tipo de alquiler y su precio promedio. Primero tenemos una suma de cuántos anuncios hay por tipo de alquiler y sumamos sus precios para después poder sacar el promedio (dividir la suma de precios sobre el total que existe).
"""

#Pregunta 1
def precio_promedio_por_tipo_de_alquiler():
  cantidad = {'Entire home/apt': 0 , 'Private room': 0, 'Hotel room': 0 , 'Shared room': 0}
  precio = {'Entire home/apt': [] , 'Private room': [], 'Hotel room': [] , 'Shared room': []}
  promedio = {'Entire home/apt': 0 , 'Private room': 0, 'Hotel room': 0 , 'Shared room': 0}
  import csv
  with open("listings.csv") as File:
    reader = csv.reader(File, delimiter=",")
    next (File)
    for row in reader:
      room = row[8]
      # cantidad[room] += 1
      # import pdb; pdb.set_trace()
      price = eval(row[9])
      # precio [room] += price  
      precio[room].append(price)


    for tipo in precio.keys():
    #promedio [tipo] = precio [tipo] / cantidad [tipo]
      promedio[tipo] = sum(precio[tipo]) / len(precio[tipo])
  return promedio


print (precio_promedio_por_tipo_de_alquiler())

"""En el gráfico plasmamos sobre el eje x las claves del diccionario que retorna la función "precio_medio_por_tipo_alquiler()", es decir los tipos de alquileres y sobre el eje y los valores del diccionario que serían el precio promedio"""

import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

promedio = precio_promedio_por_tipo_de_alquiler()

plt.figure(figsize = (15,6))
plt.bar(promedio.keys(),promedio.values() )
plt.xticks(rotation = 90);
plt.xlabel('Tipo de alquiler',fontsize=15)
plt.ylabel('Precio promedio',fontsize=15)
plt.title('Precio promedio por tipo de alquiler',fontsize=20);
plt.savefig('imagen.png', bbox_inches = 'tight')

"""# 2da pregunta

La segunda pregunta es una función que se llama "cantidad_de_tipos_por_barrio()", la función no cuenta con ningún parametro, tiene los barrios y los tipos de alquiler y devuelve un diccionario. 
Es un diccionario que se llama "tipo_de_alquiler_por_barrio", como clave toma los barrios de Rio de Janeiro y como valor tiene otro diccionario que tiene como clave los tipos de alquiler y como valor la cantidad que hay de cada uno.
"""

def cantidad_de_tipos_por_barrio():
  tipo_de_alquiler_por_barrio = {}
  #cantidad_anuncios_barrio = {}
  import csv
  with open("listings.csv") as File:
    reader = csv.reader(File, delimiter=",")
    next(File)
    for row in reader:
      # import pdb; pdb.set_trace()
      neighbourhood = row[5]
      room = row[8]
      #contador = 0
      if neighbourhood in tipo_de_alquiler_por_barrio.keys():
        tipo_de_alquiler_por_barrio[neighbourhood][room] += 1
      else:
        tipo_de_alquiler_por_barrio[neighbourhood] = {"Entire home/apt" : 0, "Private room" : 0, "Hotel room" : 0, "Shared room" : 0}
        tipo_de_alquiler_por_barrio[neighbourhood][room] += 1
  return tipo_de_alquiler_por_barrio
print(cantidad_de_tipos_por_barrio())

precio_Urca = []
import csv
with open("listings.csv") as File:
    reader = csv.reader(File, delimiter=",")
    next (File)
    for row in reader:
      neighbourhood = row[5]
      price = int(row[9])
      if neighbourhood == "Urca":
        precio_Urca.append(price)
      else: continue
print ("Los precios en el barrio Urca son: ", precio_Urca)

#precio promedio por barrio por tipo de habitacion
def cantidad_de_tipos_por_barrio():
  tipo_de_alquiler_por_barrio = {}
  #cantidad_anuncios_barrio = {}
  import csv
  with open("listings.csv") as File:
    reader = csv.reader(File, delimiter=",")
    next(File)
    for row in reader:
      neighbourhood = row[5]
      room = row[8]
      precio = eval(row[9])
           #contador = 0
      if neighbourhood in tipo_de_alquiler_por_barrio.keys():
        tipo_de_alquiler_por_barrio[neighbourhood][room] += precio

      else:
        tipo_de_alquiler_por_barrio[neighbourhood] = {"Entire home/apt" : 0, "Private room" : 0, "Hotel room" : 0, "Shared room" : 0}
        tipo_de_alquiler_por_barrio[neighbourhood][room] = precio



  return tipo_de_alquiler_por_barrio
print(cantidad_de_tipos_por_barrio())
print(precio_promedio_por_tipo_de_alquiler())

"""El primer grafico toma las claves de un diccionario, valor del primer diccionario, que serian los tipos de alquiler, y los valores que serian la cantidad que hay de cada uno por barrio."""

#Grafico pregunta 2
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

funcion = cantidad_de_tipos_por_barrio()

barrio_elegido = input("Elige el barrio") 

for barrio, diccionario  in funcion.items():
  if barrio == barrio_elegido:
    plt.figure(figsize = (15,6))
    plt.bar(diccionario.keys(),diccionario.values() )
    plt.xticks(rotation = 90);
    plt.xlabel("Tipos de anuncios",fontsize=15)
    plt.ylabel('Cantidad de anuncios',fontsize=15)
    plt.title(barrio,fontsize=20);
    plt.savefig('imagen.png', bbox_inches = 'tight')
    plt.show()

"""# 3ra pregunta

La tercer pregunta es una función que retorna la cantidad de anuncios por barrio, devuelve un diccionario que tiene como clave cada barrio y como valor la cantidad total de anuncios que hay en cada uno.
"""

def cantidad_anuncios_barrio():
  cantidad_anuncios_barrio = {}
  funcion = cantidad_de_tipos_por_barrio()
  for barrio, tipo in funcion.items():
    contador = 0
    for a in tipo.values():
      contador += a
    cantidad_anuncios_barrio[barrio] = contador
  return cantidad_anuncios_barrio
print(cantidad_anuncios_barrio())

"""Este grafico toma las claves del diccionario *cantidad_anuncios_barrio*, que serian los barrios, y los valores que serian la cantidad de anuncios que hay. En el eje y estan la cantidad de anuncios que hay, y en el eje x los barrios. Agregando un input, el usuario puede acceder al rango de barrios que el elija sin necesidad de ver todos."""

#Grafico pregunta 3 
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

indicar_range1 = int(input("Indique el valor inicial del rango de barrios que desea ver (0-153)"))
indicar_range2 = int(input("Indique el valor final del rango de barrios que desea ver (0-153)"))


fun = cantidad_anuncios_barrio()
plt.figure(figsize = (30,6))
plt.bar(fun.keys(), fun.values())
plt.xticks(rotation = 90);
plt.xlabel('Barrio',fontsize=15)
plt.ylabel('Cantidad de anuncios',fontsize=15)
plt.title('Cantidad de anuncios por barrio',fontsize=20);
plt.savefig('imagen.png', bbox_inches = 'tight')
plt.xlim(indicar_range1, indicar_range2)

if indicar_range1 > 30:
  plt.ylim(0, 500)
elif indicar_range1 > 10:
  plt.ylim(0, 1500)
elif indicar_range1 > 1:
  plt.ylim(0, 3000)

"""La diferencia de este grafico con el anterior es que no tiene uno de los barrios, que es el que más cantidad de anuncios tiene. De esta forma puedo tener dos graficos, uno con ese barrio y otro sin. """

#Grafico pregunta 3 sin copacabana
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()

indicar_range1 = int(input("Indique el valor inicial del rango de barrios que desea ver (0-153)"))
indicar_range2 = int(input("Indique el valor final del rango de barrios que desea ver (0-153)"))

cantidad_anuncios_barrio_sin_copacabana = {} 
cantidad_anuncios_barrio_sin_copacabana = fun.copy()
del cantidad_anuncios_barrio_sin_copacabana["Copacabana"]

plt.figure(figsize = (30,6))
plt.bar(cantidad_anuncios_barrio_sin_copacabana.keys(), cantidad_anuncios_barrio_sin_copacabana.values())
plt.xticks(rotation = 90, fontsize=20);
plt.yticks(fontsize=20);
plt.xlabel('Barrio',fontsize=30)
plt.ylabel('Cantidad de anuncios',fontsize=30)
plt.title('Cantidad de anuncios por barrio',fontsize=40);
plt.savefig('imagen.png', bbox_inches = 'tight')
plt.xlim(indicar_range1, indicar_range2)

if indicar_range1 > 30:
  plt.ylim(0, 500)
elif indicar_range1 > 10:
  plt.ylim(0, 1500)